import { createHash as createHash$1, randomBytes } from 'node:crypto';

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
function createHash(input, length = 4) {
  return createHash$1("shake256", {
    outputLength: length
  }).update(input).digest("hex");
}
__name(createHash, "createHash");
function createRandomHash(length = 4) {
  return createHash(randomBytes(20).toString("base64"), length);
}
__name(createRandomHash, "createRandomHash");

export { createHash, createRandomHash };
//# sourceMappingURL=hash.js.map
//# sourceMappingURL=hash.js.map