import { ValueOf } from '../types.cjs';
import './guards.cjs';

/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare function splitString(text: string, options: {
    size: number;
    overlap: number;
    trim?: boolean;
}): Generator<string, void, any>;
declare function mergeStrings(chunks: string[], sep: string, options: {
    size: number;
    overlap: number;
    trim?: boolean;
}): Generator<string, void, unknown>;
declare function recursiveSplitString(text: string, options: {
    size: number;
    overlap: number;
    separators: string[];
    trim?: boolean;
}): Generator<string>;
declare const Comparator: {
    readonly EQ: readonly [0];
    readonly GT: readonly [1];
    readonly GTE: readonly [0, 1];
    readonly LT: readonly [-1];
    readonly LTE: readonly [-1, 0];
};
declare function compareVersion(a: string, comparator: ValueOf<typeof Comparator>, b: string): boolean;
declare function isJsonLikeString(value: string | undefined): value is string;
declare function halveString(value: string, seq: string, includeSeq?: boolean): [string] | [string, string];
declare function countSharedStartEndLetters(a: string, b: string): number;
declare function findFirstPair(text: string, pair: [string, string], options?: {
    allowOverlap?: boolean;
}): {
    start: number;
    end: number;
    pair: [string, string];
    inner: string;
    outer: string;
} | null;

export { Comparator, compareVersion, countSharedStartEndLetters, findFirstPair, halveString, isJsonLikeString, mergeStrings, recursiveSplitString, splitString };
