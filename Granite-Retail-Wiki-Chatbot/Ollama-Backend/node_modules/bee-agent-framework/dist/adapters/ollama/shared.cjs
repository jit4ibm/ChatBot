'use strict';

var serializer_cjs = require('../../serializer/serializer.cjs');
var ollama = require('ollama');
var object_cjs = require('../../internals/helpers/object.cjs');
var string_cjs = require('../../internals/helpers/string.cjs');
var remeda = require('remeda');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
function registerClient() {
  serializer_cjs.Serializer.register(ollama.Ollama, {
    toPlain: /* @__PURE__ */ __name((value) => ({
      config: object_cjs.getPropStrict(value, "config"),
      fetch: object_cjs.getPropStrict(value, "fetch")
    }), "toPlain"),
    fromPlain: /* @__PURE__ */ __name((value) => new ollama.Ollama({
      fetch: value.fetch ?? value.config.fetch,
      host: value.config.host,
      proxy: value.config.proxy
    }), "fromPlain")
  });
}
__name(registerClient, "registerClient");
async function retrieveVersion(baseUrl, client = fetch) {
  const url = new URL("/api/version", baseUrl);
  const response = await client(url);
  if (!response.ok) {
    throw new Error(`Could not retrieve Ollama API version.`);
  }
  const data = await response.json();
  return data.version;
}
__name(retrieveVersion, "retrieveVersion");
function retrieveFormat(version, guided) {
  if (!guided?.json) {
    return void 0;
  }
  if (string_cjs.compareVersion(String(version), string_cjs.Comparator.GTE, "0.5.0")) {
    return remeda.isString(guided.json) ? JSON.parse(guided.json) : guided.json;
  } else {
    return "json";
  }
}
__name(retrieveFormat, "retrieveFormat");
function extractModelMeta(response) {
  const tokenLimit = Object.entries(response.model_info).find(([k]) => k.includes("context_length") || k.includes("max_sequence_length"))?.at(1);
  return {
    tokenLimit: tokenLimit || Infinity
  };
}
__name(extractModelMeta, "extractModelMeta");

exports.extractModelMeta = extractModelMeta;
exports.registerClient = registerClient;
exports.retrieveFormat = retrieveFormat;
exports.retrieveVersion = retrieveVersion;
//# sourceMappingURL=shared.cjs.map
//# sourceMappingURL=shared.cjs.map