import { BaseToolOptions, BaseToolRunOptions, ToolOutput } from '../base.cjs';
import 'ajv';
import '../../context.cjs';
import '../../emitter-DdThRYHg.cjs';
import '../../internals/types.cjs';
import '../../internals/helpers/guards.cjs';
import '../../internals/serializable.cjs';
import '../../internals/helpers/promise.cjs';
import '../../errors.cjs';
import 'promise-based-task';
import '../../cache/base.cjs';
import '../../internals/helpers/schema.cjs';
import 'zod';
import 'zod-to-json-schema';

/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

interface SearchToolOptions extends BaseToolOptions {
}
interface SearchToolRunOptions extends BaseToolRunOptions {
}
interface SearchToolResult {
    title: string;
    description: string;
    url: string;
}
declare abstract class SearchToolOutput<TSearchToolResult extends SearchToolResult = SearchToolResult> extends ToolOutput {
    readonly results: TSearchToolResult[];
    constructor(results: TSearchToolResult[]);
    get sources(): string[];
    isEmpty(): boolean;
    getTextContent(): string;
}

export { type SearchToolOptions, SearchToolOutput, type SearchToolResult, type SearchToolRunOptions };
