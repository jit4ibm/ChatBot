import { PromptTemplate } from '../../template.js';
import { BaseDriver } from './base.js';
import yaml from 'js-yaml';
import { z } from 'zod';

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
class YamlDriver extends BaseDriver {
  static {
    __name(this, "YamlDriver");
  }
  template = new PromptTemplate({
    schema: z.object({
      schema: z.string()
    }),
    template: `You are a helpful assistant that generates only valid YAML adhering to the following schema.

\`\`\`
{{schema}}
\`\`\`

IMPORTANT: Every message must be a parsable YAML string without additional output.
`
  });
  static {
    this.register();
  }
  parseResponse(textResponse) {
    return yaml.load(textResponse);
  }
  schemaToString(schema) {
    return yaml.dump(schema);
  }
}

export { YamlDriver };
//# sourceMappingURL=yaml.js.map
//# sourceMappingURL=yaml.js.map