{"version":3,"sources":["../../../src/instrumentation/helpers/utils.ts"],"names":["assertLLMWithMessagesToPromptFn","instance","Boolean","BaseLLM","isFunction","messagesToPrompt"],"mappings":";;;;;;;AAoBO,SAASA,gCAAgCC,QAAgB,EAAA;AAG9D,EAAOC,OAAAA,OAAAA,CACLD,oBAAoBE,gBAClB,IAAA,kBAAA,IAAsBF,YACtBG,iBAAWH,CAAAA,QAAAA,CAASI,gBAAgB,CAAA,CAAA;AAE1C;AARgBL,MAAAA,CAAAA,+BAAAA,EAAAA,iCAAAA,CAAAA","file":"utils.cjs","sourcesContent":["/**\n * Copyright 2024 IBM Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BAMChatLLMInputConfig } from \"@/adapters/bam/chat.js\";\nimport { BaseLLM } from \"@/llms/base.js\";\nimport { isFunction } from \"remeda\";\n\nexport function assertLLMWithMessagesToPromptFn(instance: object): instance is BaseLLM<any, any> & {\n  messagesToPrompt: BAMChatLLMInputConfig[\"messagesToPrompt\"];\n} {\n  return Boolean(\n    instance instanceof BaseLLM &&\n      \"messagesToPrompt\" in instance &&\n      isFunction(instance.messagesToPrompt),\n  );\n}\n"]}