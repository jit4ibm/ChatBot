{"version":3,"sources":["../../../../gen/typescript/buf/validate/priv/private_pb.ts"],"sourcesContent":["// Copyright 2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file buf/validate/priv/private.proto (package buf.validate.priv, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { FieldOptions, Message, proto3 } from \"@bufbuild/protobuf\";\n\n/**\n * Do not use. Internal to protovalidate library\n *\n * @generated from message buf.validate.priv.FieldConstraints\n */\nexport class FieldConstraints extends Message<FieldConstraints> {\n  /**\n   * @generated from field: repeated buf.validate.priv.Constraint cel = 1;\n   */\n  cel: Constraint[] = [];\n\n  constructor(data?: PartialMessage<FieldConstraints>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"buf.validate.priv.FieldConstraints\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"cel\", kind: \"message\", T: Constraint, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FieldConstraints {\n    return new FieldConstraints().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FieldConstraints {\n    return new FieldConstraints().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FieldConstraints {\n    return new FieldConstraints().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: FieldConstraints | PlainMessage<FieldConstraints> | undefined, b: FieldConstraints | PlainMessage<FieldConstraints> | undefined): boolean {\n    return proto3.util.equals(FieldConstraints, a, b);\n  }\n}\n\n/**\n * Do not use. Internal to protovalidate library\n *\n * @generated from message buf.validate.priv.Constraint\n */\nexport class Constraint extends Message<Constraint> {\n  /**\n   * @generated from field: string id = 1;\n   */\n  id = \"\";\n\n  /**\n   * @generated from field: string message = 2;\n   */\n  message = \"\";\n\n  /**\n   * @generated from field: string expression = 3;\n   */\n  expression = \"\";\n\n  constructor(data?: PartialMessage<Constraint>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"buf.validate.priv.Constraint\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"expression\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Constraint {\n    return new Constraint().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Constraint {\n    return new Constraint().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Constraint {\n    return new Constraint().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Constraint | PlainMessage<Constraint> | undefined, b: Constraint | PlainMessage<Constraint> | undefined): boolean {\n    return proto3.util.equals(Constraint, a, b);\n  }\n}\n\n/**\n * Do not use. Internal to protovalidate library\n *\n * @generated from extension: optional buf.validate.priv.FieldConstraints field = 1160;\n */\nexport const field = proto3.makeExtension<FieldOptions, FieldConstraints>(\n  \"buf.validate.priv.field\", \n  FieldOptions, \n  () => ({ no: 1160, kind: \"message\", T: FieldConstraints, opt: true }),\n);\n\n"],"mappings":"AAoBA,SAAS,cAAc,SAAS,cAAc;AAOvC,MAAM,yBAAyB,QAA0B;AAAA;AAAA;AAAA;AAAA,EAI9D,MAAoB,CAAC;AAAA,EAErB,YAAY,MAAyC;AACnD,UAAM;AACN,WAAO,KAAK,YAAY,MAAM,IAAI;AAAA,EACpC;AAAA,EAEA,OAAgB,UAAyB;AAAA,EACzC,OAAgB,WAAW;AAAA,EAC3B,OAAgB,SAAoB,OAAO,KAAK,aAAa,MAAM;AAAA,IACjE,EAAE,IAAI,GAAG,MAAM,OAAO,MAAM,WAAW,GAAG,YAAY,UAAU,KAAK;AAAA,EACvE,CAAC;AAAA,EAED,OAAO,WAAW,OAAmB,SAAwD;AAC3F,WAAO,IAAI,iBAAiB,EAAE,WAAW,OAAO,OAAO;AAAA,EACzD;AAAA,EAEA,OAAO,SAAS,WAAsB,SAAsD;AAC1F,WAAO,IAAI,iBAAiB,EAAE,SAAS,WAAW,OAAO;AAAA,EAC3D;AAAA,EAEA,OAAO,eAAe,YAAoB,SAAsD;AAC9F,WAAO,IAAI,iBAAiB,EAAE,eAAe,YAAY,OAAO;AAAA,EAClE;AAAA,EAEA,OAAO,OAAO,GAAkE,GAA2E;AACzJ,WAAO,OAAO,KAAK,OAAO,kBAAkB,GAAG,CAAC;AAAA,EAClD;AACF;AAOO,MAAM,mBAAmB,QAAoB;AAAA;AAAA;AAAA;AAAA,EAIlD,KAAK;AAAA;AAAA;AAAA;AAAA,EAKL,UAAU;AAAA;AAAA;AAAA;AAAA,EAKV,aAAa;AAAA,EAEb,YAAY,MAAmC;AAC7C,UAAM;AACN,WAAO,KAAK,YAAY,MAAM,IAAI;AAAA,EACpC;AAAA,EAEA,OAAgB,UAAyB;AAAA,EACzC,OAAgB,WAAW;AAAA,EAC3B,OAAgB,SAAoB,OAAO,KAAK,aAAa,MAAM;AAAA,IACjE;AAAA,MAAE,IAAI;AAAA,MAAG,MAAM;AAAA,MAAM,MAAM;AAAA,MAAU,GAAG;AAAA;AAAA,IAA0B;AAAA,IAClE;AAAA,MAAE,IAAI;AAAA,MAAG,MAAM;AAAA,MAAW,MAAM;AAAA,MAAU,GAAG;AAAA;AAAA,IAA0B;AAAA,IACvE;AAAA,MAAE,IAAI;AAAA,MAAG,MAAM;AAAA,MAAc,MAAM;AAAA,MAAU,GAAG;AAAA;AAAA,IAA0B;AAAA,EAC5E,CAAC;AAAA,EAED,OAAO,WAAW,OAAmB,SAAkD;AACrF,WAAO,IAAI,WAAW,EAAE,WAAW,OAAO,OAAO;AAAA,EACnD;AAAA,EAEA,OAAO,SAAS,WAAsB,SAAgD;AACpF,WAAO,IAAI,WAAW,EAAE,SAAS,WAAW,OAAO;AAAA,EACrD;AAAA,EAEA,OAAO,eAAe,YAAoB,SAAgD;AACxF,WAAO,IAAI,WAAW,EAAE,eAAe,YAAY,OAAO;AAAA,EAC5D;AAAA,EAEA,OAAO,OAAO,GAAsD,GAA+D;AACjI,WAAO,OAAO,KAAK,OAAO,YAAY,GAAG,CAAC;AAAA,EAC5C;AACF;AAOO,MAAM,QAAQ,OAAO;AAAA,EAC1B;AAAA,EACA;AAAA,EACA,OAAO,EAAE,IAAI,MAAM,MAAM,WAAW,GAAG,kBAAkB,KAAK,KAAK;AACrE;","names":[]}