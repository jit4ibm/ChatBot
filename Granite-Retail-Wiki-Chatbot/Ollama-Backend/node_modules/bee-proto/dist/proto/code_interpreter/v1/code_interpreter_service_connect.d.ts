/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { ExecuteRequest, ExecuteResponse, ParseCustomToolRequest, ParseCustomToolResponse, ExecuteCustomToolRequest, ExecuteCustomToolResponse } from './code_interpreter_service_pb.js';
import { MethodKind } from '@bufbuild/protobuf';

/**
 * @generated from service code_interpreter.v1.CodeInterpreterService
 */
declare const CodeInterpreterService: {
    readonly typeName: "code_interpreter.v1.CodeInterpreterService";
    readonly methods: {
        /**
         * @generated from rpc code_interpreter.v1.CodeInterpreterService.Execute
         */
        readonly execute: {
            readonly name: "Execute";
            readonly I: typeof ExecuteRequest;
            readonly O: typeof ExecuteResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * @generated from rpc code_interpreter.v1.CodeInterpreterService.ParseCustomTool
         */
        readonly parseCustomTool: {
            readonly name: "ParseCustomTool";
            readonly I: typeof ParseCustomToolRequest;
            readonly O: typeof ParseCustomToolResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * @generated from rpc code_interpreter.v1.CodeInterpreterService.ExecuteCustomTool
         */
        readonly executeCustomTool: {
            readonly name: "ExecuteCustomTool";
            readonly I: typeof ExecuteCustomToolRequest;
            readonly O: typeof ExecuteCustomToolResponse;
            readonly kind: MethodKind.Unary;
        };
    };
};

export { CodeInterpreterService };
