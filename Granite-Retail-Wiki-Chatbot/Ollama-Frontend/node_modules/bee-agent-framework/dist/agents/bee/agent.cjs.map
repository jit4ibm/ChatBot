{"version":3,"sources":["../../../src/agents/bee/agent.ts"],"names":["BeeAgent","BaseAgent","emitter","runner","constructor","input","Emitter","root","child","namespace","creator","duplicate","tools","find","a","i","arr","b","j","name","toUpperCase","ValueError","llm","modelId","includes","GraniteRunner","DefaultRunner","register","memory","meta","slice","description","length","extraDescription","map","tool","join","_run","options","run","execution","maxRetriesPerStep","totalMaxRetries","maxIterations","init","finalMessage","state","signal","createIteration","tool_name","tool_input","output","success","add","BaseMessage","of","role","Role","ASSISTANT","text","templates","assistant","render","thought","filter","R","isTruthy","toolName","toolInput","call","JSON","stringify","toolOutput","finalAnswer","final_answer","assign","tool_output","key","emit","data","update","value","parsedValue","createdAt","Date","iterations","prompt","USER","result","createSnapshot"],"mappings":"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","file":"agent.cjs","sourcesContent":["/**\n * Copyright 2024 IBM Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseAgent } from \"@/agents/base.js\";\nimport { AnyTool } from \"@/tools/base.js\";\nimport { BaseMemory } from \"@/memory/base.js\";\nimport { ChatLLM, ChatLLMOutput } from \"@/llms/chat.js\";\nimport { BaseMessage, Role } from \"@/llms/primitives/message.js\";\nimport { AgentMeta } from \"@/agents/types.js\";\nimport { Emitter } from \"@/emitter/emitter.js\";\nimport {\n  BeeAgentTemplates,\n  BeeCallbacks,\n  BeeRunInput,\n  BeeRunOptions,\n  BeeRunOutput,\n} from \"@/agents/bee/types.js\";\nimport { GetRunContext } from \"@/context.js\";\nimport { assign } from \"@/internals/helpers/object.js\";\nimport * as R from \"remeda\";\nimport { BaseRunner } from \"@/agents/bee/runners/base.js\";\nimport { GraniteRunner } from \"@/agents/bee/runners/granite/runner.js\";\nimport { DefaultRunner } from \"@/agents/bee/runners/default/runner.js\";\nimport { ValueError } from \"@/errors.js\";\n\nexport interface BeeInput {\n  llm: ChatLLM<ChatLLMOutput>;\n  tools: AnyTool[];\n  memory: BaseMemory;\n  meta?: Omit<AgentMeta, \"tools\">;\n  templates?: Partial<BeeAgentTemplates>;\n}\n\nexport class BeeAgent extends BaseAgent<BeeRunInput, BeeRunOutput, BeeRunOptions> {\n  public readonly emitter = Emitter.root.child<BeeCallbacks>({\n    namespace: [\"agent\", \"bee\"],\n    creator: this,\n  });\n\n  protected runner: new (...args: ConstructorParameters<typeof BaseRunner>) => BaseRunner;\n\n  constructor(protected readonly input: BeeInput) {\n    super();\n\n    const duplicate = input.tools.find((a, i, arr) =>\n      arr.find((b, j) => i !== j && a.name.toUpperCase() === b.name.toUpperCase()),\n    );\n    if (duplicate) {\n      throw new ValueError(\n        `Agent's tools must all have different names. Conflicting tool: ${duplicate.name}.`,\n      );\n    }\n\n    this.runner = this.input.llm.modelId.includes(\"granite\") ? GraniteRunner : DefaultRunner;\n  }\n\n  static {\n    this.register();\n  }\n\n  get memory() {\n    return this.input.memory;\n  }\n\n  get meta(): AgentMeta {\n    const tools = this.input.tools.slice();\n\n    if (this.input.meta) {\n      return { ...this.input.meta, tools };\n    }\n\n    return {\n      name: \"Bee\",\n      tools,\n      description:\n        \"The Bee framework demonstrates its ability to auto-correct and adapt in real-time, improving the overall reliability and resilience of the system.\",\n      ...(tools.length > 0 && {\n        extraDescription: [\n          `Tools that I can use to accomplish given task.`,\n          ...tools.map((tool) => `Tool '${tool.name}': ${tool.description}.`),\n        ].join(\"\\n\"),\n      }),\n    };\n  }\n\n  protected async _run(\n    input: BeeRunInput,\n    options: BeeRunOptions = {},\n    run: GetRunContext<typeof this>,\n  ): Promise<BeeRunOutput> {\n    const runner = new this.runner(\n      this.input,\n      {\n        ...options,\n        execution: options?.execution ?? {\n          maxRetriesPerStep: 3,\n          totalMaxRetries: 20,\n          maxIterations: 10,\n        },\n      },\n      run,\n    );\n    await runner.init(input);\n\n    let finalMessage: BaseMessage | undefined;\n    while (!finalMessage) {\n      const { state, meta, emitter, signal } = await runner.createIteration();\n\n      if (state.tool_name && state.tool_input) {\n        const { output, success } = await runner.tool({\n          state,\n          emitter,\n          meta,\n          signal,\n        });\n        await runner.memory.add(\n          BaseMessage.of({\n            role: Role.ASSISTANT,\n            text: runner.templates.assistant.render({\n              thought: [state.thought].filter(R.isTruthy),\n              toolName: [state.tool_name].filter(R.isTruthy),\n              toolInput: [state.tool_input].filter(R.isTruthy).map((call) => JSON.stringify(call)),\n              toolOutput: [output],\n              finalAnswer: [state.final_answer].filter(R.isTruthy),\n            }),\n            meta: { success },\n          }),\n        );\n        assign(state, { tool_output: output });\n\n        for (const key of [\"partialUpdate\", \"update\"] as const) {\n          await emitter.emit(key, {\n            data: state,\n            update: { key: \"tool_output\", value: output, parsedValue: output },\n            meta: { success, ...meta },\n            memory: runner.memory,\n          });\n        }\n      }\n      if (state.final_answer) {\n        finalMessage = BaseMessage.of({\n          role: Role.ASSISTANT,\n          text: state.final_answer,\n          meta: {\n            createdAt: new Date(),\n          },\n        });\n        await runner.memory.add(finalMessage);\n        await emitter.emit(\"success\", {\n          data: finalMessage,\n          iterations: runner.iterations,\n          memory: runner.memory,\n          meta,\n        });\n      }\n    }\n\n    if (input.prompt !== null) {\n      await this.input.memory.add(\n        BaseMessage.of({\n          role: Role.USER,\n          text: input.prompt,\n          meta: {\n            createdAt: run.createdAt,\n          },\n        }),\n      );\n    }\n\n    await this.input.memory.add(finalMessage);\n    return { result: finalMessage, iterations: runner.iterations, memory: runner.memory };\n  }\n\n  createSnapshot() {\n    return {\n      ...super.createSnapshot(),\n      input: this.input,\n      emitter: this.emitter,\n      runner: this.runner,\n    };\n  }\n}\n"]}