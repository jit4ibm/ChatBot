{"version":3,"sources":["../../../../../src/agents/bee/runners/granite/runner.ts"],"names":["GraniteRunner","DefaultRunner","register","constructor","input","options","run","emitter","on","update","meta","memory","key","add","BaseMessage","of","role","text","value","success","isBlocking","initMemory","isEmpty","tools","index","messages","findIndex","msg","Role","SYSTEM","JSON","stringify","renderers","system","variables","map","tool","name","description","schema","parse","templates","customTemplates","user","GraniteBeeUserPrompt","GraniteBeeSystemPrompt","assistant","GraniteBeeAssistantPrompt","schemaError","GraniteBeeSchemaErrorPrompt","toolNotFoundError","GraniteBeeToolNotFoundPrompt","toolError","GraniteBeeToolErrorPrompt","toolInputError","GraniteBeeToolInputErrorPrompt","createParser","parser","parserRegex","RegExp","join","fork","nodes","thought","prefix","tool_name","tool_input","isEnd","next","final_answer","enumerable"],"mappings":"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","file":"runner.cjs","sourcesContent":["/**\n * Copyright 2024 IBM Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseMessage, Role } from \"@/llms/primitives/message.js\";\nimport type { AnyTool } from \"@/tools/base.js\";\nimport { isEmpty } from \"remeda\";\nimport { DefaultRunner } from \"@/agents/bee/runners/default/runner.js\";\nimport { BaseMemory } from \"@/memory/base.js\";\nimport type {\n  BeeAgentTemplates,\n  BeeParserInput,\n  BeeRunInput,\n  BeeRunOptions,\n} from \"@/agents/bee/types.js\";\nimport { BeeAgent, BeeInput } from \"@/agents/bee/agent.js\";\nimport type { GetRunContext } from \"@/context.js\";\nimport {\n  GraniteBeeAssistantPrompt,\n  GraniteBeeSchemaErrorPrompt,\n  GraniteBeeSystemPrompt,\n  GraniteBeeToolErrorPrompt,\n  GraniteBeeToolInputErrorPrompt,\n  GraniteBeeToolNotFoundPrompt,\n  GraniteBeeUserPrompt,\n} from \"@/agents/bee/runners/granite/prompts.js\";\nimport { Cache } from \"@/cache/decoratorCache.js\";\n\nexport class GraniteRunner extends DefaultRunner {\n  static {\n    this.register();\n  }\n\n  constructor(input: BeeInput, options: BeeRunOptions, run: GetRunContext<BeeAgent>) {\n    super(input, options, run);\n\n    run.emitter.on(\n      \"update\",\n      async ({ update, meta, memory }) => {\n        if (update.key === \"tool_output\") {\n          await memory.add(\n            BaseMessage.of({\n              role: \"tool_response\",\n              text: update.value,\n              meta: { success: meta.success },\n            }),\n          );\n        }\n      },\n      {\n        isBlocking: true,\n      },\n    );\n  }\n\n  protected async initMemory(input: BeeRunInput): Promise<BaseMemory> {\n    const memory = await super.initMemory(input);\n\n    if (!isEmpty(this.input.tools)) {\n      const index = memory.messages.findIndex((msg) => msg.role === Role.SYSTEM) + 1;\n      await memory.add(\n        BaseMessage.of({\n          role: \"tools\",\n          text: JSON.stringify(\n            (await this.renderers.system.variables.tools()).map((tool) => ({\n              name: tool.name,\n              description: tool.description,\n              schema: JSON.parse(tool.schema),\n            })),\n            null,\n            4,\n          ),\n        }),\n        index,\n      );\n    }\n    return memory;\n  }\n\n  @Cache({ enumerable: false })\n  get templates(): BeeAgentTemplates {\n    const customTemplates = this.input.templates ?? {};\n\n    return {\n      ...super.templates,\n      user: customTemplates.user ?? GraniteBeeUserPrompt,\n      system: customTemplates.system ?? GraniteBeeSystemPrompt,\n      assistant: customTemplates.assistant ?? GraniteBeeAssistantPrompt,\n      schemaError: customTemplates.schemaError ?? GraniteBeeSchemaErrorPrompt,\n      toolNotFoundError: customTemplates.toolNotFoundError ?? GraniteBeeToolNotFoundPrompt,\n      toolError: customTemplates.toolError ?? GraniteBeeToolErrorPrompt,\n      toolInputError: customTemplates.toolInputError ?? GraniteBeeToolInputErrorPrompt,\n    };\n  }\n\n  protected createParser(tools: AnyTool[]) {\n    const { parser } = super.createParser(tools);\n\n    return {\n      parserRegex: isEmpty(tools)\n        ? new RegExp(`Thought: .+\\\\nFinal Answer: [\\\\s\\\\S]+`)\n        : new RegExp(\n            `Thought: .+\\\\n(?:Final Answer: [\\\\s\\\\S]+|Tool Name: (${tools.map((tool) => tool.name).join(\"|\")})\\\\nTool Input: \\\\{.*\\\\})`,\n          ),\n      parser: parser.fork<BeeParserInput>((nodes, options) => ({\n        options,\n        nodes: {\n          ...nodes,\n          thought: { ...nodes.thought, prefix: \"Thought:\" },\n          tool_name: { ...nodes.tool_name, prefix: \"Tool Name:\" },\n          tool_input: { ...nodes.tool_input, prefix: \"Tool Input:\", isEnd: true, next: [] },\n          final_answer: { ...nodes.final_answer, prefix: \"Final Answer:\" },\n        },\n      })),\n    };\n  }\n}\n"]}