import { B as BaseRunner, a as BeeRunnerLLMInput, b as BeeRunnerToolInput } from '../../../../agent-D0_Sh6-R.js';
import { BeeAgentRunIteration, BeeRunInput, BeeAgentTemplates, BeeParserInput } from '../../types.js';
import { AnyTool } from '../../../../tools/base.js';
import { LinePrefixParser } from '../../../parsers/linePrefix.js';
import { BaseMessage } from '../../../../llms/primitives/message.js';
import { BaseMemory } from '../../../../memory/base.js';
import '../../../../context.js';
import '../../../../emitter-DRfJC1TP.js';
import '../../../../internals/types.js';
import '../../../../internals/helpers/guards.js';
import '../../../../internals/serializable.js';
import '../../../../internals/helpers/promise.js';
import '../../../../base-CO-FB8hi.js';
import '../../../../errors.js';
import '../../../../llms/chat.js';
import '../../../../llms/base.js';
import '../../../../cache/base.js';
import 'promise-based-task';
import '../../../../internals/helpers/counter.js';
import '../../prompts.js';
import '../../../../template.js';
import 'zod';
import 'ajv';
import '../../../parsers/field.js';
import '@streamparser/json';
import 'jsonrepair/stream';
import '../../../../internals/helpers/schema.js';
import 'zod-to-json-schema';
import '../../../parsers/errors.js';

/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare class DefaultRunner extends BaseRunner {
    llm({ signal, meta, emitter }: BeeRunnerLLMInput): Promise<BeeAgentRunIteration>;
    tool({ state, signal, meta, emitter }: BeeRunnerToolInput): Promise<{
        success: boolean;
        output: string;
    }>;
    protected get renderers(): {
        user: {
            message: ({ prompt }: BeeRunInput) => BaseMessage | undefined;
        };
        system: {
            variables: {
                tools: () => Promise<{
                    name: string;
                    description: string;
                    schema: string;
                }[]>;
            };
            message: () => Promise<BaseMessage>;
        };
    };
    protected initMemory({ prompt }: BeeRunInput): Promise<BaseMemory>;
    get templates(): BeeAgentTemplates;
    protected createParser(tools: AnyTool[]): {
        readonly parser: LinePrefixParser<BeeParserInput>;
        readonly parserRegex: RegExp;
    };
}

export { DefaultRunner };
