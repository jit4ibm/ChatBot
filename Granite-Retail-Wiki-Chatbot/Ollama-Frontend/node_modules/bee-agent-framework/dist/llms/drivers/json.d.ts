import { GenerateOptions } from '../base.js';
import { PromptTemplate } from '../../template.js';
import { BaseDriver } from './base.js';
import { SchemaObject } from 'ajv';
import { z } from 'zod';
import '../../context.js';
import '../../emitter-DRfJC1TP.js';
import '../../internals/types.js';
import '../../internals/helpers/guards.js';
import '../../internals/serializable.js';
import '../../internals/helpers/promise.js';
import '../../errors.js';
import '../../cache/base.js';
import 'promise-based-task';
import '../chat.js';
import '../primitives/message.js';

/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare class JsonDriver<TGenerateOptions extends GenerateOptions = GenerateOptions> extends BaseDriver<TGenerateOptions> {
    protected template: PromptTemplate<z.ZodObject<{
        schema: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        schema: string;
    }, {
        schema: string;
    }>>;
    static fromTemplate<T extends JsonDriver["template"]>(template: T, ...parameters: ConstructorParameters<typeof this>): JsonDriver<GenerateOptions>;
    protected parseResponse(textResponse: string): unknown;
    protected schemaToString(schema: SchemaObject): string;
    protected guided(schema: SchemaObject): {
        readonly json: SchemaObject;
    };
}

export { JsonDriver };
