'use strict';

var schema_cjs = require('../../internals/helpers/schema.cjs');
var template_cjs = require('../../template.cjs');
var base_cjs = require('./base.cjs');
var zod = require('zod');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
class JsonDriver extends base_cjs.BaseDriver {
  static {
    __name(this, "JsonDriver");
  }
  template = new template_cjs.PromptTemplate({
    schema: zod.z.object({
      schema: zod.z.string()
    }),
    template: `You are a helpful assistant that generates only valid JSON adhering to the following JSON Schema.

\`\`\`
{{schema}}
\`\`\`

IMPORTANT: Every message must be a parsable JSON string without additional output.
`
  });
  static {
    this.register();
  }
  static fromTemplate(template, ...parameters) {
    const driver = new JsonDriver(...parameters);
    driver.template = template;
    return driver;
  }
  parseResponse(textResponse) {
    return schema_cjs.parseBrokenJson(textResponse);
  }
  schemaToString(schema) {
    return JSON.stringify(schema, null, 2);
  }
  guided(schema) {
    return {
      json: schema
    };
  }
}

exports.JsonDriver = JsonDriver;
//# sourceMappingURL=json.cjs.map
//# sourceMappingURL=json.cjs.map