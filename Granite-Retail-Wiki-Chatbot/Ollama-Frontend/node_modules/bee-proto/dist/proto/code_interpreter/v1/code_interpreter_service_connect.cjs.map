{"version":3,"sources":["../../../../gen/typescript/proto/code_interpreter/v1/code_interpreter_service_connect.ts"],"sourcesContent":["// Copyright 2024 IBM Corp.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-connect-es v1.4.0 with parameter \"target=ts\"\n// @generated from file proto/code_interpreter/v1/code_interpreter_service.proto (package code_interpreter.v1, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ExecuteCustomToolRequest, ExecuteCustomToolResponse, ExecuteRequest, ExecuteResponse, ParseCustomToolRequest, ParseCustomToolResponse } from \"./code_interpreter_service_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from service code_interpreter.v1.CodeInterpreterService\n */\nexport const CodeInterpreterService = {\n  typeName: \"code_interpreter.v1.CodeInterpreterService\",\n  methods: {\n    /**\n     * @generated from rpc code_interpreter.v1.CodeInterpreterService.Execute\n     */\n    execute: {\n      name: \"Execute\",\n      I: ExecuteRequest,\n      O: ExecuteResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc code_interpreter.v1.CodeInterpreterService.ParseCustomTool\n     */\n    parseCustomTool: {\n      name: \"ParseCustomTool\",\n      I: ParseCustomToolRequest,\n      O: ParseCustomToolResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc code_interpreter.v1.CodeInterpreterService.ExecuteCustomTool\n     */\n    executeCustomTool: {\n      name: \"ExecuteCustomTool\",\n      I: ExecuteCustomToolRequest,\n      O: ExecuteCustomToolResponse,\n      kind: MethodKind.Unary,\n    },\n  }\n} as const;\n\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA,yCAAsJ;AACtJ,sBAA2B;AAKpB,MAAM,yBAAyB;AAAA,EACpC,UAAU;AAAA,EACV,SAAS;AAAA;AAAA;AAAA;AAAA,IAIP,SAAS;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,MAAM,2BAAW;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA,IAIA,iBAAiB;AAAA,MACf,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,MAAM,2BAAW;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA,IAIA,mBAAmB;AAAA,MACjB,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,MAAM,2BAAW;AAAA,IACnB;AAAA,EACF;AACF;","names":[]}