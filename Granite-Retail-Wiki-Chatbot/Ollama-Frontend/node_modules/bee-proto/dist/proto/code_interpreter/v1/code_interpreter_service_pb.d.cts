import { Message, PartialMessage, proto3, FieldList, BinaryReadOptions, JsonValue, JsonReadOptions, PlainMessage } from '@bufbuild/protobuf';

/**
 * @generated from message code_interpreter.v1.ExecuteRequest
 */
declare class ExecuteRequest extends Message<ExecuteRequest> {
    /**
     * @generated from field: string executor_id = 1;
     */
    executorId: string;
    /**
     * @generated from field: string source_code = 2;
     */
    sourceCode: string;
    /**
     * @generated from field: map<string, string> files = 3;
     */
    files: {
        [key: string]: string;
    };
    constructor(data?: PartialMessage<ExecuteRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ExecuteRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteRequest;
    static equals(a: ExecuteRequest | PlainMessage<ExecuteRequest> | undefined, b: ExecuteRequest | PlainMessage<ExecuteRequest> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ExecuteResponse
 */
declare class ExecuteResponse extends Message<ExecuteResponse> {
    /**
     * @generated from field: string stdout = 1;
     */
    stdout: string;
    /**
     * @generated from field: string stderr = 2;
     */
    stderr: string;
    /**
     * @generated from field: int32 exit_code = 3;
     */
    exitCode: number;
    /**
     * @generated from field: map<string, string> files = 4;
     */
    files: {
        [key: string]: string;
    };
    constructor(data?: PartialMessage<ExecuteResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ExecuteResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteResponse;
    static equals(a: ExecuteResponse | PlainMessage<ExecuteResponse> | undefined, b: ExecuteResponse | PlainMessage<ExecuteResponse> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ParseCustomToolRequest
 */
declare class ParseCustomToolRequest extends Message<ParseCustomToolRequest> {
    /**
     * @generated from field: string tool_source_code = 1;
     */
    toolSourceCode: string;
    constructor(data?: PartialMessage<ParseCustomToolRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ParseCustomToolRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseCustomToolRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseCustomToolRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseCustomToolRequest;
    static equals(a: ParseCustomToolRequest | PlainMessage<ParseCustomToolRequest> | undefined, b: ParseCustomToolRequest | PlainMessage<ParseCustomToolRequest> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ParseCustomToolResponseSuccess
 */
declare class ParseCustomToolResponseSuccess extends Message<ParseCustomToolResponseSuccess> {
    /**
     * @generated from field: string tool_name = 1;
     */
    toolName: string;
    /**
     * @generated from field: string tool_description = 2;
     */
    toolDescription: string;
    /**
     * @generated from field: string tool_input_schema_json = 3;
     */
    toolInputSchemaJson: string;
    constructor(data?: PartialMessage<ParseCustomToolResponseSuccess>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ParseCustomToolResponseSuccess";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseCustomToolResponseSuccess;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseCustomToolResponseSuccess;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseCustomToolResponseSuccess;
    static equals(a: ParseCustomToolResponseSuccess | PlainMessage<ParseCustomToolResponseSuccess> | undefined, b: ParseCustomToolResponseSuccess | PlainMessage<ParseCustomToolResponseSuccess> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ParseCustomToolResponseError
 */
declare class ParseCustomToolResponseError extends Message<ParseCustomToolResponseError> {
    /**
     * @generated from field: repeated string error_messages = 1;
     */
    errorMessages: string[];
    constructor(data?: PartialMessage<ParseCustomToolResponseError>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ParseCustomToolResponseError";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseCustomToolResponseError;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseCustomToolResponseError;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseCustomToolResponseError;
    static equals(a: ParseCustomToolResponseError | PlainMessage<ParseCustomToolResponseError> | undefined, b: ParseCustomToolResponseError | PlainMessage<ParseCustomToolResponseError> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ParseCustomToolResponse
 */
declare class ParseCustomToolResponse extends Message<ParseCustomToolResponse> {
    /**
     * @generated from oneof code_interpreter.v1.ParseCustomToolResponse.response
     */
    response: {
        /**
         * @generated from field: code_interpreter.v1.ParseCustomToolResponseSuccess success = 1;
         */
        value: ParseCustomToolResponseSuccess;
        case: "success";
    } | {
        /**
         * @generated from field: code_interpreter.v1.ParseCustomToolResponseError error = 2;
         */
        value: ParseCustomToolResponseError;
        case: "error";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<ParseCustomToolResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ParseCustomToolResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseCustomToolResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseCustomToolResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseCustomToolResponse;
    static equals(a: ParseCustomToolResponse | PlainMessage<ParseCustomToolResponse> | undefined, b: ParseCustomToolResponse | PlainMessage<ParseCustomToolResponse> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ExecuteCustomToolRequest
 */
declare class ExecuteCustomToolRequest extends Message<ExecuteCustomToolRequest> {
    /**
     * @generated from field: string executor_id = 1;
     */
    executorId: string;
    /**
     * @generated from field: string tool_source_code = 2;
     */
    toolSourceCode: string;
    /**
     * @generated from field: string tool_input_json = 3;
     */
    toolInputJson: string;
    constructor(data?: PartialMessage<ExecuteCustomToolRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ExecuteCustomToolRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteCustomToolRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteCustomToolRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteCustomToolRequest;
    static equals(a: ExecuteCustomToolRequest | PlainMessage<ExecuteCustomToolRequest> | undefined, b: ExecuteCustomToolRequest | PlainMessage<ExecuteCustomToolRequest> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ExecuteCustomToolResponseSuccess
 */
declare class ExecuteCustomToolResponseSuccess extends Message<ExecuteCustomToolResponseSuccess> {
    /**
     * @generated from field: string tool_output_json = 1;
     */
    toolOutputJson: string;
    constructor(data?: PartialMessage<ExecuteCustomToolResponseSuccess>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ExecuteCustomToolResponseSuccess";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteCustomToolResponseSuccess;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteCustomToolResponseSuccess;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteCustomToolResponseSuccess;
    static equals(a: ExecuteCustomToolResponseSuccess | PlainMessage<ExecuteCustomToolResponseSuccess> | undefined, b: ExecuteCustomToolResponseSuccess | PlainMessage<ExecuteCustomToolResponseSuccess> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ExecuteCustomToolResponseError
 */
declare class ExecuteCustomToolResponseError extends Message<ExecuteCustomToolResponseError> {
    /**
     * @generated from field: string stderr = 1;
     */
    stderr: string;
    constructor(data?: PartialMessage<ExecuteCustomToolResponseError>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ExecuteCustomToolResponseError";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteCustomToolResponseError;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteCustomToolResponseError;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteCustomToolResponseError;
    static equals(a: ExecuteCustomToolResponseError | PlainMessage<ExecuteCustomToolResponseError> | undefined, b: ExecuteCustomToolResponseError | PlainMessage<ExecuteCustomToolResponseError> | undefined): boolean;
}
/**
 * @generated from message code_interpreter.v1.ExecuteCustomToolResponse
 */
declare class ExecuteCustomToolResponse extends Message<ExecuteCustomToolResponse> {
    /**
     * @generated from oneof code_interpreter.v1.ExecuteCustomToolResponse.response
     */
    response: {
        /**
         * @generated from field: code_interpreter.v1.ExecuteCustomToolResponseSuccess success = 1;
         */
        value: ExecuteCustomToolResponseSuccess;
        case: "success";
    } | {
        /**
         * @generated from field: code_interpreter.v1.ExecuteCustomToolResponseError error = 2;
         */
        value: ExecuteCustomToolResponseError;
        case: "error";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<ExecuteCustomToolResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "code_interpreter.v1.ExecuteCustomToolResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteCustomToolResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteCustomToolResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteCustomToolResponse;
    static equals(a: ExecuteCustomToolResponse | PlainMessage<ExecuteCustomToolResponse> | undefined, b: ExecuteCustomToolResponse | PlainMessage<ExecuteCustomToolResponse> | undefined): boolean;
}

export { ExecuteCustomToolRequest, ExecuteCustomToolResponse, ExecuteCustomToolResponseError, ExecuteCustomToolResponseSuccess, ExecuteRequest, ExecuteResponse, ParseCustomToolRequest, ParseCustomToolResponse, ParseCustomToolResponseError, ParseCustomToolResponseSuccess };
